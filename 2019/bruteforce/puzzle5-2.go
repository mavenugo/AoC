package main

import (
	"fmt"
	"os"
	"strconv"
)

// pass command-line argument of 5 to solve the puzzle
func main() {
	// Input from https://adventofcode.com/2019/day/5/input
	input := []int{3, 225, 1, 225, 6, 6, 1100, 1, 238, 225, 104, 0, 1102, 35, 92, 225, 1101, 25, 55, 225, 1102, 47, 36, 225, 1102, 17, 35, 225, 1, 165, 18, 224, 1001, 224, -106, 224, 4, 224, 102, 8, 223, 223, 1001, 224, 3, 224, 1, 223, 224, 223, 1101, 68, 23, 224, 101, -91, 224, 224, 4, 224, 102, 8, 223, 223, 101, 1, 224, 224, 1, 223, 224, 223, 2, 217, 13, 224, 1001, 224, -1890, 224, 4, 224, 102, 8, 223, 223, 1001, 224, 6, 224, 1, 224, 223, 223, 1102, 69, 77, 224, 1001, 224, -5313, 224, 4, 224, 1002, 223, 8, 223, 101, 2, 224, 224, 1, 224, 223, 223, 102, 50, 22, 224, 101, -1800, 224, 224, 4, 224, 1002, 223, 8, 223, 1001, 224, 5, 224, 1, 224, 223, 223, 1102, 89, 32, 225, 1001, 26, 60, 224, 1001, 224, -95, 224, 4, 224, 102, 8, 223, 223, 101, 2, 224, 224, 1, 223, 224, 223, 1102, 51, 79, 225, 1102, 65, 30, 225, 1002, 170, 86, 224, 101, -2580, 224, 224, 4, 224, 102, 8, 223, 223, 1001, 224, 6, 224, 1, 223, 224, 223, 101, 39, 139, 224, 1001, 224, -128, 224, 4, 224, 102, 8, 223, 223, 101, 3, 224, 224, 1, 223, 224, 223, 1102, 54, 93, 225, 4, 223, 99, 0, 0, 0, 677, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1105, 0, 99999, 1105, 227, 247, 1105, 1, 99999, 1005, 227, 99999, 1005, 0, 256, 1105, 1, 99999, 1106, 227, 99999, 1106, 0, 265, 1105, 1, 99999, 1006, 0, 99999, 1006, 227, 274, 1105, 1, 99999, 1105, 1, 280, 1105, 1, 99999, 1, 225, 225, 225, 1101, 294, 0, 0, 105, 1, 0, 1105, 1, 99999, 1106, 0, 300, 1105, 1, 99999, 1, 225, 225, 225, 1101, 314, 0, 0, 106, 0, 0, 1105, 1, 99999, 1008, 677, 677, 224, 1002, 223, 2, 223, 1005, 224, 329, 101, 1, 223, 223, 7, 677, 677, 224, 102, 2, 223, 223, 1006, 224, 344, 101, 1, 223, 223, 108, 677, 677, 224, 1002, 223, 2, 223, 1006, 224, 359, 1001, 223, 1, 223, 7, 677, 226, 224, 1002, 223, 2, 223, 1005, 224, 374, 1001, 223, 1, 223, 1107, 677, 226, 224, 1002, 223, 2, 223, 1005, 224, 389, 1001, 223, 1, 223, 107, 226, 677, 224, 102, 2, 223, 223, 1005, 224, 404, 1001, 223, 1, 223, 1108, 226, 677, 224, 1002, 223, 2, 223, 1006, 224, 419, 101, 1, 223, 223, 107, 226, 226, 224, 102, 2, 223, 223, 1005, 224, 434, 1001, 223, 1, 223, 108, 677, 226, 224, 1002, 223, 2, 223, 1006, 224, 449, 101, 1, 223, 223, 108, 226, 226, 224, 102, 2, 223, 223, 1006, 224, 464, 1001, 223, 1, 223, 1007, 226, 226, 224, 1002, 223, 2, 223, 1005, 224, 479, 101, 1, 223, 223, 8, 677, 226, 224, 1002, 223, 2, 223, 1006, 224, 494, 101, 1, 223, 223, 1007, 226, 677, 224, 102, 2, 223, 223, 1006, 224, 509, 101, 1, 223, 223, 7, 226, 677, 224, 1002, 223, 2, 223, 1005, 224, 524, 101, 1, 223, 223, 107, 677, 677, 224, 102, 2, 223, 223, 1005, 224, 539, 101, 1, 223, 223, 1008, 677, 226, 224, 1002, 223, 2, 223, 1005, 224, 554, 1001, 223, 1, 223, 1008, 226, 226, 224, 1002, 223, 2, 223, 1006, 224, 569, 1001, 223, 1, 223, 1108, 226, 226, 224, 102, 2, 223, 223, 1005, 224, 584, 101, 1, 223, 223, 1107, 226, 677, 224, 1002, 223, 2, 223, 1005, 224, 599, 1001, 223, 1, 223, 8, 226, 677, 224, 1002, 223, 2, 223, 1006, 224, 614, 1001, 223, 1, 223, 1108, 677, 226, 224, 102, 2, 223, 223, 1005, 224, 629, 1001, 223, 1, 223, 8, 226, 226, 224, 1002, 223, 2, 223, 1005, 224, 644, 1001, 223, 1, 223, 1107, 677, 677, 224, 1002, 223, 2, 223, 1005, 224, 659, 1001, 223, 1, 223, 1007, 677, 677, 224, 1002, 223, 2, 223, 1005, 224, 674, 101, 1, 223, 223, 4, 223, 99, 226}
	arg := os.Args[1]
	iArg, _ := strconv.Atoi(arg)
	fmt.Printf("%d\n", iArg%100)
	IntCode(iArg, input)
}

func IntCode(arg int, input []int) int {
	idx := 0
done:
	for {
		var num int
		var next int
		inst := input[idx] % 100
		pm1 := (input[idx] / 100) % 10
		pm2 := (input[idx] / 1000) % 10
		pm3 := (input[idx] / 10000) % 10
		switch inst {
		case 1:
			p1 := input[idx+1]
			if pm1 == 1 {
				p1 = idx + 1
			}
			p2 := input[idx+2]
			if pm2 == 1 {
				p2 = idx + 2
			}
			num = input[p1] + input[p2]
			p3 := input[idx+3]
			if pm3 == 1 {
				p3 = idx + 3
			}
			input[p3] = num
			next = 4
		case 2:
			p1 := input[idx+1]
			if pm1 == 1 {
				p1 = idx + 1
			}
			p2 := input[idx+2]
			if pm2 == 1 {
				p2 = idx + 2
			}
			num = input[p1] * input[p2]
			p3 := input[idx+3]
			if pm3 == 1 {
				p3 = idx + 3
			}
			input[p3] = num
			next = 4
		case 3:
			input[input[idx+1]] = arg
			next = 2
		case 4:
			fmt.Printf("%d\n", input[input[idx+1]])
			next = 2
		case 5:
			p1 := input[idx+1]
			if pm1 == 1 {
				p1 = idx + 1
			}
			p2 := input[idx+2]
			if pm2 == 1 {
				p2 = idx + 2
			}
			if input[p1] != 0 {
				idx = input[p2]
				next = 0
			} else {
				next = 3
			}
		case 6:
			p1 := input[idx+1]
			if pm1 == 1 {
				p1 = idx + 1
			}
			p2 := input[idx+2]
			if pm2 == 1 {
				p2 = idx + 2
			}
			if input[p1] == 0 {
				idx = input[p2]
				next = 0
			} else {
				next = 3
			}
		case 7:
			p1 := input[idx+1]
			if pm1 == 1 {
				p1 = idx + 1
			}
			p2 := input[idx+2]
			if pm2 == 1 {
				p2 = idx + 2
			}
			p3 := input[idx+3]
			if pm3 == 1 {
				p3 = idx + 3
			}
			if input[p1] < input[p2] {
				input[p3] = 1
			} else {
				input[p3] = 0
			}
			next = 4
		case 8:
			p1 := input[idx+1]
			if pm1 == 1 {
				p1 = idx + 1
			}
			p2 := input[idx+2]
			if pm2 == 1 {
				p2 = idx + 2
			}
			p3 := input[idx+3]
			if pm3 == 1 {
				p3 = idx + 3
			}
			if input[p1] == input[p2] {
				input[p3] = 1
			} else {
				input[p3] = 0
			}
			next = 4
		case 99:
			break done
		default:
			fmt.Printf("INPUT ERROR %d %d\n", inst, idx)
			// break done
		}
		idx = idx + next
	}
	return input[0]
}
